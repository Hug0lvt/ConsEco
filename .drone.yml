kind: pipeline
type: docker
name: CI_CONSECO_MAUI

trigger :
    event:
        - push

steps:
    - name: build
      image: mcr.microsoft.com/dotnet/sdk:6.0
      commands:
        - cd Sources
        - dotnet workload restore
        - dotnet restore CI_MAUI.sln
        - dotnet build CI_MAUI.sln -c Release --no-restore
        - dotnet publish CI_MAUI.sln -c Release --no-restore -o CI_PROJECT_DIR/build/release

    - name: tests
      image: mcr.microsoft.com/dotnet/sdk:6.0
      commands:
        - cd Sources
        - dotnet restore CI_MAUI.sln
        - dotnet test CI_MAUI.sln --no-restore
      depends_on: [build]

    - name: code-analysis
      image: hub.codefirst.iut.uca.fr/thomas.bellembois/codefirst-dronesonarplugin-dotnet6
      commands:
        - cd Sources/
        - dotnet workload restore
        - dotnet restore CI_MAUI.sln
        - dotnet sonarscanner begin /k:ConsEco /d:sonar.host.url=$${PLUGIN_SONAR_HOST} /d:sonar.coverageReportPaths="coveragereport/SonarQube.xml" /d:sonar.coverage.exclusions="Tests/**" /d:sonar.login=$${PLUGIN_SONAR_TOKEN} 
        - dotnet build CI_MAUI.sln -c Release --no-restore
        - dotnet test CI_MAUI.sln --logger trx --no-restore /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura --collect "XPlat Code Coverage"
        - reportgenerator -reports:"**/coverage.cobertura.xml" -reporttypes:SonarQube -targetdir:"coveragereport"
        - dotnet publish CI_MAUI.sln -c Release --no-restore -o CI_PROJECT_DIR/build/release
        - dotnet sonarscanner end /d:sonar.login=$${PLUGIN_SONAR_TOKEN}
      secrets: [ SECRET_SONAR_LOGIN ]
      settings:
        # accessible en ligne de commande par ${PLUGIN_SONAR_HOST}
        sonar_host: https://codefirst.iut.uca.fr/sonar/
        # accessible en ligne de commande par ${PLUGIN_SONAR_TOKEN}
        sonar_token:
          from_secret: SECRET_SONAR_LOGIN
      depends_on: [tests]

    - name: deploy-container-mysql
      image: hub.codefirst.iut.uca.fr/thomas.bellembois/codefirst-dockerproxy-clientdrone:latest
      environment:
        IMAGENAME: mariadb:latest
        CONTAINERNAME: mariadb
        COMMAND: create
        #OVERWRITE: true
        PRIVATE: false
        CODEFIRST_CLIENTDRONE_ENV_MARIADB_ROOT_PASSWORD:    
          from_secret: db_root_password
        CODEFIRST_CLIENTDRONE_ENV_MARIADB_DATABASE:
          from_secret: db_database
        CODEFIRST_CLIENTDRONE_ENV_MARIADB_USER:
          from_secret: db_user
        CODEFIRST_CLIENTDRONE_ENV_MARIADB_PASSWORD:
          from_secret: db_password

    - name: web-API
      image: plugins/docker
      settings:
        dockerfile: ./Dockerfile
        context: ./
        registry: hub.codefirst.iut.uca.fr
        repo: hub.codefirst.iut.uca.fr/consecoteam/conseco
        username:
          from_secret: secret-registry-username
        password:
          from_secret: secret-registry-password
      
      
    - name: deploy-web-container
      image: hub.codefirst.iut.uca.fr/thomas.bellembois/codefirst-dockerproxy-clientdrone:latest
      environment:
        IMAGENAME: hub.codefirst.iut.uca.fr/consecoteam/conseco:latest
        CONTAINERNAME: conseco
        COMMAND: create
        OVERWRITE: true
        CODEFIRST_CLIENTDRONE_ENV_MARIADB_ROOT_PASSWORD:    
          from_secret: db_root_password
        CODEFIRST_CLIENTDRONE_ENV_MARIADB_DATABASE:
          from_secret: db_database
        CODEFIRST_CLIENTDRONE_ENV_MARIADB_USER:
          from_secret: db_user
        CODEFIRST_CLIENTDRONE_ENV_MARIADB_PASSWORD:
          from_secret: db_password
      depends_on: [ web-API, deploy-container-mysql ]